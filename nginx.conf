# Define user and worker processes
user nginx;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Set up events
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;

    # Remove port from upstream definitions
    upstream frontend {
        server frontend:80;
    }

    upstream backend {
        server backend:5000;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name purrytails.in www.purrytails.in;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS Server Configuration
    server {
        listen 443 ssl http2;  # Enable HTTP2 here, in the correct place
        server_name purrytails.in www.purrytails.in;

        # SSL certificate configuration
        ssl_certificate /etc/letsencrypt/live/purrytails.in/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/purrytails.in/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/purrytails.in/fullchain.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;

        # Frontend (React) Service Proxy
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Backend (FastAPI) API Proxy
        location /api {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle WebSocket connections (if applicable)
        location /ws/ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }

        # Favicon handling (optional)
        location /favicon.ico {
            proxy_pass http://frontend/favicon.ico;
        }
    }
}
